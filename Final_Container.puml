@startuml University_Course_Management_System_Container
!include https://raw.githubusercontent.com/kirchsth/C4-PlantUML/extended/C4_Container.puml

AddRelTag("sync", $textColor="black", $lineColor="black", $lineStyle = DashedLine())
AddRelTag("event", $textColor="blue", $lineColor="blue", $lineStyle = DottedLine())

LAYOUT_WITH_LEGEND()

title University Course Management System - Container Diagram (with Data Analytics Integration)

skinparam Arrow {
  FontColor black
  CaptionFontStyle bold
  Color black
  Style dashed
}

' External users (actors)
Person(student, "Student", "Enrolls in courses and views academic records.")
Person(faculty, "Faculty", "Manages courses and views student performance.")
Person(admin, "Administrator", "Manages courses and generates reports.")

' Main system - UCMS
System(UCMS, "University Course Management System", "Handles course enrollments, academic records, and data reporting.") {

    Container(webApp, "Web Application", "Vue.js", "Provides the front-end interface for students, faculty, and admins.")
    Container(apiGateway, "API Gateway", "Spring Bean", "Routes HTTP requests to the appropriate microservices and handles security.")
    Container(courseService, "Course Enrollment Service", "", "Manages course offerings, enrollments, and updates.")
    Container(studentService, "Student Record Service", "", "Handles student academic records and interactions.")
    Container(reportingService, "Reporting Service", "", "Generates academic and enrollment reports.")
    Container(authService, "Authentication Service", "OAuth 2.0", "Handles user authentication and role-based access control.")
    Container(notificationService, "Notification Service", "", "Sends notifications based on events (e.g., enrollment success).")
    Container(backupService, "Backup Service", "Cloud Backup", "Backs up student and course data to ensure recoverability.")
    ContainerDb(academicDb, "Academic Records Database", "PostgreSQL", "Stores student records, course data, and enrollment history.")
    ContainerDb(dataWarehouse, "Data Warehouse", "PostgreSQL (OLAP)", "Stores historical and aggregated data for analytics and reporting.")
    Container(etlPipeline, "ETL Pipeline", "Python/Spark", "Extracts, transforms, and loads data from operational systems to the data warehouse.")
}

' External systems
System_Ext(SIS, "Student Information System (SIS)", "External system for managing student and course data.")
System_Ext(authSystem, "University SSO", "Handles Single Sign-On (SSO) for user authentication.")
System_Ext(backupSystem, "Cloud Backup System", "Provides cloud-based data backup and recovery.")
System_Ext(dataAnalytics, "Data Analytics System", "Processes and analyzes academic data for reporting and insights.")

' Relationships between users and UCMS
Rel(student, webApp, "Enrolls in courses and views records", $tags="sync")
Rel(faculty, webApp, "Manages courses and views student performance", $tags="sync")
Rel(admin, webApp, "Generates reports and manages courses", $tags="sync")

' Web application routing requests
Rel(webApp, apiGateway, "Routes requests to microservices", $tags="sync")

' Relationships between API Gateway and microservices
Rel(apiGateway, courseService, "Manages course enrollment requests", $tags="sync")
Rel(apiGateway, studentService, "Manages student academic records", $tags="sync")
Rel(apiGateway, reportingService, "Generates reports", $tags="sync")
Rel(apiGateway, authService, "Handles authentication", $tags="sync")
Rel(apiGateway, sisIntegration, "Syncs with SIS", $tags="sync")

' Relationships between microservices and databases
Rel(courseService, academicDb, "Reads/Writes course enrollment data", $tags="sync")
Rel(studentService, academicDb, "Reads/Writes student academic data", $tags="sync")
Rel(reportingService, dataWarehouse, "Generates reports from historical data", $tags="sync")
Rel(etlPipeline, academicDb, "Extracts data from operational systems", $tags="sync")
Rel(etlPipeline, dataWarehouse, "Loads transformed data into data warehouse", $tags="sync")

' External system interactions
Rel(backupService, backupSystem, "Backs up academic and course data", $tags="sync")
Rel(authService, authSystem, "Authenticates users via SSO", $tags="sync")
Rel(reportingService, dataAnalytics, "Provides academic data for analysis and insights", $tags="sync")
Rel(dataAnalytics, reportingService, "Processes course and student performance data", $tags="sync")

' Relationships with SIS
Rel(courseService, SIS, "Syncs course data with SIS", $tags="sync")
Rel(studentService, SIS, "Syncs student data with SIS", $tags="sync")

@enduml
